name: CI
on:
  push:
    branches:
    - main
    - renovate/*
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      skipBuild:
        description: "Skip Build (deploy only)"
        required: true
        default: "false"

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    outputs:
      image_sha: ${{ steps.push_image.outputs.image_sha }}
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

      - name: Build Docker images
        run: |
          for appname in YouTubeDL.Web; do
            app=`echo $appname | tr '[:upper:]' '[:lower:]'`
            echo "Building $appname docker"
            docker build -t $app -f "$appname/Dockerfile" .
          done
        if: github.event.inputs.skipBuild != 'true'

      - name: Push Docker images
        id: push_image
        run: |
          echo $GITHUB_TOKEN | docker login ghcr.io --username MattJeanes --password-stdin
          for appname in YouTubeDL.Web; do
            app=`echo $appname | tr '[:upper:]' '[:lower:]'`
            echo "Deploying $appname"
            docker tag $app ghcr.io/mattjeanes/youtubedl/$app:latest
            docker push ghcr.io/mattjeanes/youtubedl/$app:latest
            
            # Get the image SHA and set it as output
            IMAGE_SHA=$(docker inspect --format='{{index .RepoDigests 0}}' ghcr.io/mattjeanes/youtubedl/$app:latest | cut -d'@' -f2)
            echo "image_sha=$IMAGE_SHA" >> $GITHUB_OUTPUT
          done
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        if: github.ref == 'refs/heads/main' && github.event.inputs.skipBuild != 'true'

  deploy:
    if: github.ref == 'refs/heads/main'
    needs: build
    name: Deploy
    uses: ./.github/workflows/terraform.yaml
    with:
      runApply: true
      image_sha: ${{ needs.build.outputs.image_sha }}
    secrets: inherit
