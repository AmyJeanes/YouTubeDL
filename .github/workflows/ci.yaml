name: CI
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:
    inputs:
      skipBuild:
        description: "Skip Build (deploy only)"
        required: true
        default: "false"

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Build Docker images
        run: |
          for appname in YouTubeDL.Web; do
            app=`echo $appname | tr '[:upper:]' '[:lower:]'`
            echo "Building $appname docker"
            docker build -t $app -f "$appname/Dockerfile" .
          done
        if: github.event.inputs.skipBuild != 'true'

      - name: Push Docker images
        run: |
          echo $GITHUB_TOKEN | docker login docker.pkg.github.com --username MattJeanes --password-stdin
          for appname in YouTubeDL.Web; do
            app=`echo $appname | tr '[:upper:]' '[:lower:]'`
            echo "Deploying $appname"
            docker tag $app docker.pkg.github.com/mattjeanes/youtubedl/$app:latest
            docker push docker.pkg.github.com/mattjeanes/youtubedl/$app:latest
          done
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        if: github.ref == 'refs/heads/main' && github.event.inputs.skipBuild != 'true'
  deploy:
    if: github.ref == 'refs/heads/main'
    name: Deploy
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Checkout Infrastructure repo
        uses: actions/checkout@v2.4.2
        with:
          repository: MattJeanes/Abyss-Infrastructure
          path: infrastructure

      - name: Azure Login
        uses: Azure/login@v1.4.3
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Login to Kubernetes
        uses: Azure/aks-set-context@v2.1
        with:
          resource-group: abyss
          cluster-name: abyss

      - name: Install YouTubeDL
        run: |
          helm upgrade --install --wait --atomic --debug --timeout 10m0s \
            youtubedl ./youtubedl \
            --namespace default \
            --set apiKey="${{ secrets.YOUTUBE_API_KEY }}" \
            --set ingress.enabled=true \
            --set ingress.hosts[0]="${{ secrets.HOST }}" \
            --set ingress.tls[0].hosts[0]="${{ secrets.HOST }}" \
            --set ingress.tls[0].secretName="youtubedl-tls" \
            --set ingress.annotations.kubernetes\\.io/ingress\\.class="nginx" \
            --set ingress.annotations.cert-manager\\.io/cluster-issuer="letsencrypt-prod"
        working-directory: charts

      - name: Wait for certificate to be ready
        run: ./WaitKubeCertificate.ps1 -Name "youtubedl-tls"
        shell: pwsh
        working-directory: infrastructure/scripts
